rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Users can upload files to their own folder
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Mission submissions - users can upload proof files
    match /missions/{missionId}/submissions/{submissionId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        (resource.metadata.userId == request.auth.uid || 
         request.auth.token.role == 'admin' || 
         request.auth.token.role == 'moderator');
    }
    
    // Mission assets - only admins can upload
    match /missions/{missionId}/assets/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.role == 'admin' || request.auth.token.role == 'moderator');
    }
    
    // Profile pictures - users can upload their own
    match /profiles/{userId}/avatar/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin uploads - only admins
    match /admin/{allPaths=**} {
      allow read, write: if request.auth != null && 
        (request.auth.token.role == 'admin' || request.auth.token.role == 'moderator');
    }
    
    // Public assets - readable by all authenticated users
    match /public/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.role == 'admin' || request.auth.token.role == 'moderator');
    }
  }
}